// $()関数では、特定の属性を持つ要素や属性値を絞り込むことができる
// 特定の属性を持つ要素のみ取得したいとき
// $('要素[属性]')
// 属性値が特定の値に等しい要素だけを取得したいとき
// $('要素[属性 = "値"]')
// 属性値が特定の値に等しくない要素だけを取得したいとき
// $('要素[属性 != "値"]')
// // .hide();は、特定のHTML要素を非表示にするメソッド

// $('#tab-contents .tab[id != "tab1"]').hide();と記述することで、
// id="tab-contents"の要素のうち、 class="tab"であり、id="tab1"ではない要素が非表示
$('#tab-contents .tab[id != "tab1"]').hide();

$('#tab-menu a').on('click', function(event) {

  // 「id="tab-menu"のaタグがクリックされたときに、処理を実行してください」の意味
  $("#tab-contents .tab").hide();

  // id="tab-contents"内のいずれかのタブがクリックされたときに、そのタブ内の全コンテンツをいったん非表示
  // .removeClass()は、クラス属性が設定されているHTML要素から、クラスを削除するメソッド
  // ここでは、activeが削除対象のクラスとして指定されている
  // CSSの#tab-menu .activeの設定では、タブのクラスがactiveのときは背景色が白色／文字色が黒色になるように設定されている
  // タブを切り替えるときは、このCSS設定もいったん削除しなければならない。このため、.removeClass()にactiveクラスを指定している
  $("#tab-menu .active").removeClass("active");

  // .addClass()は、任意のHTML要素にクラス属性を追加できるメソッド
  // ここでは、activeが追加対象のクラスとして指定されている
  // どのときにactiveクラスが追加されるかというと、$(this)のとき、つまり、タブがクリックされたとき
  $(this).addClass("active");

　// .attr()は、HTML要素の属性を取得したり設定できるメソッド
　// ここでは、href属性を取得するように指定している
  $($(this).attr("href")).show();
　//  さらに、.show()は要素を表示するメソッドため、取得したhref属性の中身が表示されることになる
　//　どのときに表示されるかというと、$(this)のとき、つまり、タブがクリックされたとき
  event.preventDefault();
});